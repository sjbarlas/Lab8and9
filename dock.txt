curl -s -X GET -H 'Accept: application/json' http://Saira.cloudapp.net:8080/containers

. venv/bin/activate

curl -s -X GET -H 'Accept: application/json' http://ec2-52-30-53-57.eu-west-1.compute.amazonaws.com/:8080/containers?state=running

~~~~~~~~~~~~~~~~~~~~~~~~~
1 !!!!!!!!!!!!!
a) curl –s > Makes curl mute and doesn’t show any error messages or progress meter.
b) curl –X GET > Requesting data using GET method.
c) curl –H 'Accept: application/json' > Header Line. Custom header to pass to server.
d) Use  the  CURL  Command  to  connect  to  the  “/”  location  of  the  CMFA  and  list  the  REST 
Services  available >  curl -s -X GET -H 'Accept: application/json' http://ec2-52-30-53-57.eu-west-1.compute.amazonaws.com/:8080/


2!!!!!!!!!!
a) - no. of images
curl -s -X GET -H 'Accept: application/json' http://ec2-52-30-53-57.eu-west-1.compute.amazonaws.com:8080/images | python -m json.tool
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   718  100   718    0     0   1260      0 --:--:-- --:--:-- --:--:--  1261
[
    {
        "id": "fc0ee7de8070",
        "name": "<none>",
        "tag": "<none>"
    },
    {
        "id": "3155ce9cde3f",
        "name": "sshd_image",
        "tag": "latest"
    },
    {
        "id": "3155ce9cde3f",
        "name": "whalesay-build",
        "tag": "latest"
    },
    {
        "id": "5a8b7c8a771b",
        "name": "<none>",
        "tag": "<none>"
    },
    {
        "id": "baa3eab042ac",
        "name": "tagname1",
        "tag": "latest"
    },
    {
        "id": "8413e3a00179",
        "name": "dd",
        "tag": "latest"
    },
    {
        "id": "8413e3a00179",
        "name": "d",
        "tag": "latest"
    },
    {
        "id": "8413e3a00179",
        "name": "tagd",
        "tag": "latest"
    },
    {
        "id": "8413e3a00179",
        "name": "smalltag",
        "tag": "latest"
    },
    {
        "id": "c92b8506d182",
        "name": "python",
        "tag": "2.7"
    },
    {
        "id": "a5a467fddcb8",
        "name": "ubuntu",
        "tag": "14.04"
    },
    {
        "id": "fb434121fc77",
        "name": "docker/whalesay",
        "tag": "latest"
    }
]


b) - containers
curl -s -X GET -H 'Accept: application/json' http://ec2-52-30-53-57.eu-west-1.compute.amazonaws.com:8080/containers | python -m json.tool
[
    {
        "id": "b1124f8ff987",
        "image": "fc0ee7de8070",
        "name": "loving_fermat",
        "ports": "ago"
    },
    {
        "id": "ab05f5c67cc1",
        "image": "a2d53667e34a",
        "name": "drunk_hypatia",
        "ports": "ago"
    },
    {
        "id": "c45969a68bbd",
        "image": "9e2d56d398a9b3d54fd0211fc142c67e0695c58b4d4d013ca85b7a64ea5e0303",
        "name": "prickly_yalow",
        "ports": "ago"
    },
    {
        "id": "274988462c3b",
        "image": "9e2d56d398a9b3d54fd0211fc142c67e0695c58b4d4d013ca85b7a64ea5e0303",
        "name": "mad_noyce",
        "ports": "ago"
    },
    {
        "id": "8f318704b882",
        "image": "9e2d56d398a9b3d54fd0211fc142c67e0695c58b4d4d013ca85b7a64ea5e0303",
        "name": "pensive_bhaskara",
        "ports": "ago"
    },
    {
        "id": "887f2b901cb2",
        "image": "3155ce9cde3f",
        "name": "berserk_elion",
        "ports": "ago"
    },
    {
        "id": "3fe7b1b3a019",
        "image": "sshd_image",
        "name": "focused_kalam",
        "ports": "ago"
    },
    {
        "id": "b9a0490b101b",
        "image": "whalesay-build",
        "name": "insane_bartik",
        "ports": "ago"
    },
    {
        "id": "98bc5786cf63",
        "image": "whalesay-build",
        "name": "modest_mayer",
        "ports": "ago"
    },
    {
        "id": "ed1a23b5b64e",
        "image": "whalesay-build",
        "name": "insane_mestorf",
        "ports": "ago"
    },
    {
        "id": "e9ac907f6f60",
        "image": "8413e3a00179",
        "name": "ubuntu-ssh2",
        "ports": "ago"
    },
    {
        "id": "1af419559fd3",
        "image": "8413e3a00179",
        "name": "ubuntu-ssh1",
        "ports": "0.0.0.0:8082->22/tcp"
    },
    {
        "id": "29bfc1f33ac1",
        "image": "8413e3a00179",
        "name": "furious_hypatia",
        "ports": "ago"
    }
]

c) - running containers
curl -s -X GET -H 'Accept: application/json' http://ec2-52-30-53-57.eu-west-1.compute.amazonaws.com:8080/containers?state=running python -m json.tool
[
    {
        "id": "1af419559fd3",
        "image": "8413e3a00179",
        "name": "ubuntu-ssh1",
        "ports": "0.0.0.0:8082->22/tcp"
    }
]

d) - curl -s -X GET -H 'Accept: application/json' http://ec2-52-30-53-57.eu-west-1.compute.amazonaws.com:8080/images | python -m json.tool

e) - curl -s -X GET -H 'Accept: application/json' http://ec2-52-30-53-57.eu-west-1.compute.amazonaws.com:8080/images | python -m json.tool
There is no difference, they all have different names though

f) -  curl -H 'Accept: application/json' -F file=@Dockerfile  http://ec2-52-30-53-57.eu-west-1.compute.amazonaws.com:8080/images

g) - curl -s -X GET -H 'Accept: application/json' http://ec2-52-30-53-57.eu-west-1.compute.amazonaws.com:8080/containers/1af419559fd3 | python -m json.tool
[
    {
        "AppArmorProfile": "",
        "Args": [
            "-D"
        ],
        "Config": {
            "AttachStderr": false,
            "AttachStdin": false,
            "AttachStdout": false,
            "Cmd": [
                "/usr/sbin/sshd",
                "-D"
            ],
            "Domainname": "",
            "Entrypoint": null,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                "NOTVISIBLE=in users profile"
            ],
            "ExposedPorts": {
                "22/tcp": {}
            },
            "Hostname": "1af419559fd3",
            "Image": "8413e3a00179",
            "Labels": {},
            "MacAddress": "",
            "NetworkDisabled": false,
            "OnBuild": null,
            "OpenStdin": false,
            "PublishService": "",
            "StdinOnce": false,
            "Tty": false,
            "User": "",
            "VolumeDriver": "",
            "Volumes": null,
            "WorkingDir": ""
        },
        "Created": "2015-10-28T19:24:07.934594301Z",
        "Driver": "aufs",
        "ExecDriver": "native-0.2",
        "ExecIDs": null,
        "GraphDriver": {
            "Data": null,
            "Name": "aufs"
        },
        "HostConfig": {
            "Binds": null,
            "BlkioWeight": 0,
            "CapAdd": null,
            "CapDrop": null,
            "CgroupParent": "",
            "ConsoleSize": [
                0,
                0
            ],
            "ContainerIDFile": "",
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuShares": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "Dns": null,
            "DnsSearch": null,
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "",
            "Links": null,
            "LogConfig": {
                "Config": {},
                "Type": "json-file"
            },
            "LxcConf": [],
            "Memory": 0,
            "MemorySwap": 0,
            "MemorySwappiness": -1,
            "NetworkMode": "default",
            "OomKillDisable": false,
            "PidMode": "",
            "PortBindings": {
                "22/tcp": [
                    {
                        "HostIp": "",
                        "HostPort": "8082"
                    }
                ]
            },
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "RestartPolicy": {
                "MaximumRetryCount": 0,
                "Name": "no"
            },
            "SecurityOpt": null,
            "UTSMode": "",
            "Ulimits": null,
            "VolumesFrom": null
        },
        "HostnamePath": "/var/lib/docker/containers/1af419559fd3e452d30f911a954d744185d00bf273865664bd54847011ef7285/hostname",
        "HostsPath": "/var/lib/docker/containers/1af419559fd3e452d30f911a954d744185d00bf273865664bd54847011ef7285/hosts",
        "Id": "1af419559fd3e452d30f911a954d744185d00bf273865664bd54847011ef7285",
        "Image": "8413e3a001798f5b33b02b23824c67b686685f888986f0cae40321035b5529d0",
        "LogPath": "/var/lib/docker/containers/1af419559fd3e452d30f911a954d744185d00bf273865664bd54847011ef7285/1af419559fd3e452d30f911a954d744185d00bf273865664bd54847011ef7285-json.log",
        "MountLabel": "",
        "Mounts": [],
        "Name": "/ubuntu-ssh1",
        "NetworkSettings": {
            "Bridge": "",
            "EndpointID": "4ff14a6cd6d00044400e2c9043f0d532ee9d98863bedff1f4afbf80977a2986b",
            "Gateway": "172.17.42.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "HairpinMode": false,
            "IPAddress": "172.17.0.84",
            "IPPrefixLen": 16,
            "IPv6Gateway": "",
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "MacAddress": "02:42:ac:11:00:54",
            "NetworkID": "8261c31a5a1e546f86687012d799e58e8a9eba6433fa322236d89795c820e8ba",
            "PortMapping": null,
            "Ports": {
                "22/tcp": [
                    {
                        "HostIp": "0.0.0.0",
                        "HostPort": "8082"
                    }
                ]
            },
            "SandboxKey": "/var/run/docker/netns/1af419559fd3",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null
        },
        "Path": "/usr/sbin/sshd",
        "ProcessLabel": "",
        "ResolvConfPath": "/var/lib/docker/containers/1af419559fd3e452d30f911a954d744185d00bf273865664bd54847011ef7285/resolv.conf",
        "RestartCount": 0,
        "State": {
            "Dead": false,
            "Error": "",
            "ExitCode": 0,
            "FinishedAt": "2015-11-11T14:22:55.781628252Z",
            "OOMKilled": false,
            "Paused": false,
            "Pid": 13821,
            "Restarting": false,
            "Running": true,
            "StartedAt": "2015-11-11T14:22:56.122182874Z"
        }
    }
]

h) idk

i) curl -s -X PATCH -H 'Accept: application/json' http://ec2-52-30-53-57.eu-west-1.compute.amazonaws.com:8080/containers/e9ac907f6f60 | python -m json.tool

4 !!!!!!!!!!
1 a) - containters
curl -s -X GET -H 'Accept: application/json' http://Saira.cloudapp.net:8080/containers
| python -m json.tool
[
    {
        "id": "130f7376d011",
        "image": "hello-world",
        "name": "big_yalow",
        "ports": "ago"
    },
    {
        "id": "d3df27f0a37e",
        "image": "hello-world",
        "name": "agitated_fermi",
        "ports": "ago"
    }
]

1 b) - running containters
curl -s -X GET -H 'Accept: application/json' http://Saira.cloudapp.net:8080/containers?state=running
NONE

2 - images
curl -s -X GET -H 'Accept: application/json' http://Saira.cloudapp.net:8080/containers/ac6f783504aa | python -m json.tool
[
    {
        "id": "hello-world",
        "image": "latest",
        "name": "B",
        "ports": "960"
    }
]

3 - id
curl -s -X GET -H 'Accept: application/json' http://Saira.cloudapp.net:8080/containers/ac6f783504aa | python -m json.tool
[
    {
        "AppArmorProfile": "",
        "Args": [],
        "Config": {
            "AttachStderr": true,
            "AttachStdin": false,
            "AttachStdout": true,
            "Cmd": [
                "/hello"
            ],
            "Domainname": "",
            "Entrypoint": null,
            "Env": null,
            "Hostname": "ac6f783504aa",
            "Image": "hello-world",
            "Labels": {},
            "OnBuild": null,
            "OpenStdin": false,
            "StdinOnce": false,
            "StopSignal": "SIGTERM",
            "Tty": false,
            "User": "",
            "Volumes": null,
            "WorkingDir": ""
        },
        "Created": "2015-11-11T15:57:59.3805144Z",
        "Driver": "aufs",
        "ExecDriver": "native-0.2",
        "ExecIDs": null,
        "GraphDriver": {
            "Data": null,
            "Name": "aufs"
        },
        "HostConfig": {
            "Binds": null,
            "BlkioWeight": 0,
            "CapAdd": null,
            "CapDrop": null,
            "CgroupParent": "",
            "ConsoleSize": [
                0,
                0
            ],
            "ContainerIDFile": "",
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuShares": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "Dns": null,
            "DnsOptions": null,
            "DnsSearch": null,
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "",
            "KernelMemory": 0,
            "Links": null,
            "LogConfig": {
                "Config": {},
                "Type": "json-file"
            },
            "LxcConf": [],
            "Memory": 0,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": -1,
            "NetworkMode": "default",
            "OomKillDisable": false,
            "PidMode": "",
            "PortBindings": {},
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "RestartPolicy": {
                "MaximumRetryCount": 0,
                "Name": "no"
            },
            "SecurityOpt": null,
            "UTSMode": "",
            "Ulimits": null,
            "VolumeDriver": "",
            "VolumesFrom": null
        },
        "HostnamePath": "/var/lib/docker/containers/ac6f783504aab95dd09c0d4e72d7c65c9145f143e9f91c6c4cc2d4d64ee41220/hostname",
        "HostsPath": "/var/lib/docker/containers/ac6f783504aab95dd09c0d4e72d7c65c9145f143e9f91c6c4cc2d4d64ee41220/hosts",
        "Id": "ac6f783504aab95dd09c0d4e72d7c65c9145f143e9f91c6c4cc2d4d64ee41220",
        "Image": "0a6ba66e537a53a5ea94f7c6a99c534c6adb12e3ed09326d4bf3b38f7c3ba4e7",
        "LogPath": "/var/lib/docker/containers/ac6f783504aab95dd09c0d4e72d7c65c9145f143e9f91c6c4cc2d4d64ee41220/ac6f783504aab95dd09c0d4e72d7c65c9145f143e9f91c6c4cc2d4d64ee41220-json.log",
        "MountLabel": "",
        "Mounts": [],
        "Name": "/nostalgic_wilson",
        "NetworkSettings": {
            "Bridge": "",
            "EndpointID": "",
            "Gateway": "",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "HairpinMode": false,
            "IPAddress": "",
            "IPPrefixLen": 0,
            "IPv6Gateway": "",
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "MacAddress": "",
            "Networks": {
                "bridge": {
                    "EndpointID": "",
                    "Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "IPAddress": "",
                    "IPPrefixLen": 0,
                    "IPv6Gateway": "",
                    "MacAddress": ""
                }
            },
            "Ports": null,
            "SandboxID": "",
            "SandboxKey": "",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null
        },
        "Path": "/hello",
        "ProcessLabel": "",
        "ResolvConfPath": "/var/lib/docker/containers/ac6f783504aab95dd09c0d4e72d7c65c9145f143e9f91c6c4cc2d4d64ee41220/resolv.conf",
        "RestartCount": 0,
        "State": {
            "Dead": false,
            "Error": "",
            "ExitCode": 0,
            "FinishedAt": "2015-11-11T15:58:00.292232Z",
            "OOMKilled": false,
            "Paused": false,
            "Pid": 0,
            "Restarting": false,
            "Running": false,
            "StartedAt": "2015-11-11T15:58:00.2764369Z",
            "Status": "exited"
        }
    }
]

4 SAME AS HELLO-WORLD
curl -s -X GET -H 'Accept: application/json' http://Saira.cloudapp.net:8080/containers/ac6f783504aa/logs

5 !!!!!!!!!!!!!!!
1 - images remove
curl -s -X DELETE -H 'Accept: application/json' http://Saira.cloudapp.net:8080/images/ac6f783504aa | python -m json.tool

2 - containers remove
curl -s -X DELETE -H 'Accept: application/json' http://Saira.cloudapp.net:8080/containers/ac6f783504aa | python -m json.tool

3 - images remove all
curl -s -X DELETE -H 'Accept: application/json' http://Saira.cloudapp.net:8080/images | python -m json.tool

4 - remove containers all
curl -s -X DELETE -H 'Accept: application/json' http://Saira.cloudapp.net:8080/containers | python -m json.tool

6 !!!!!!!!!!!!!!!
> done

7 !!!!!!!!!!!!!!!
> half done